version: '2.2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
        - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9999:9999
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999"

  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
      - 8181:8181
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
    links:
      - zookeeper
      - kafka

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    ports:
      - 8082:8082
    links:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      - KAFKA_REST_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_REST_LISTENERS=http://kafka-rest:8082
      - KAFKA_REST_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - KAFKA_REST_HOST_NAME=kafka-rest

  kafka-jmx-exporter:
      build: ./kafka-jmx-exporter
      ports:
        - 8080:8080
      links:
        - kafka
      environment:
        - JMX_PORT=9999
        - JMX_HOST=${JMX_HOST_IP}
        - HTTP_PORT=8080
        - JMX_EXPORTER_CONFIG_FILE=kafka.yml

  prometheus:
    ports:
      - 9090:9090/tcp
    image: prom/prometheus:0.18.0
    volumes:
      - ./mount/prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:3.0.1
    ports:
      - 3000:3000/tcp
    links:
      - prometheus
    volumes:
      - "graf-db:/var/lib/grafana"

  graf-db:
    command:
      - cat
    image: infinityworks/graf-db:08
    links:
      - prometheus
    volumes:
          - "graf-db:/var/lib/grafana/"
volumes:
  graf-db:
